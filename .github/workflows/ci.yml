name: Build

on:
  push:
    branches:
    - main
    - develop
    tags:
    - '*.*.*'
  pull_request:
    branches:
    - main
    - develop
  workflow_dispatch:
    
permissions:
  checks: write
  statuses: write
  contents: write

jobs:
  build:

    env:
      BUILD_CONFIG: 'Release'
      SOLUTION: 'SourceGeneratorContext.sln'

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore $SOLUTION

    - name: Build
      run: dotnet build $SOLUTION --configuration $BUILD_CONFIG --no-restore

    - name: Run tests
      run: dotnet test --configuration $BUILD_CONFIG --no-restore --no-build --verbosity normal

    - name: Get tag for current commit
      id: get_tag
      if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
      run: |
        TAG=$(git tag --points-at HEAD | grep -E '^[0-9]+\.[0-9]+\.[0-9]+$' | head -n 1)
        echo "tag=$TAG" >> $GITHUB_OUTPUT
        echo "Found tag: $TAG"

    - name: Pack NuGet package
      if: steps.get_tag.outputs.tag != ''
      run: dotnet pack $SOLUTION --configuration $BUILD_CONFIG --no-build --output ./artifacts
      
    - name: Publish to NuGet
      if: steps.get_tag.outputs.tag != ''
      run: dotnet nuget push ./artifacts/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate

    - name: Create GitHub Release
      if: steps.get_tag.outputs.tag != ''
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.get_tag.outputs.tag }}
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
