using Datacute.AdditionalTextConstantGenerator;

namespace Datacute.SourceGeneratorContext;

[AdditionalTextConstants(".cs", "Templates")]
internal static partial class Templates
{
    private const string GeneratorNamespace = "Datacute.SourceGeneratorContext";
    private const string AttributeName = "SourceGeneratorContextAttribute";
    public const string AttributeFullyQualified = GeneratorNamespace + "." + AttributeName;

    public const string AttributeHintName =
        "Datacute.SourceGeneratorContext.SourceGeneratorContextAttribute.g.cs";

    public const string IncludeFlagsHintName =
        "Datacute.SourceGeneratorContext.IncludeFlags.g.cs";

    public const string AutoGeneratedComment = /* language=c# */
        @"//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Datacute.SourceGeneratorContext.
// </auto-generated>
//------------------------------------------------------------------------------
";

    public const string ClassDocCommentsBegin = /* language=c# */
        @"/// <summary>
/// When this item is examined by a source generator...<br/><br/>
";

    public const string ClassDocCommentsSectionBegin = /* language=c# */
        @"/// {0} contains:
/// <list type=""table"">
/// <listheader><term>Key</term><description>Value</description></listheader>
";

    public const string OptionsLine = /* language=c# */
        @"/// <item><term>{0}</term><description>{1}</description></item>
";

    public const string ClassDocCommentsSectionEnd = /* language=c# */
        @"/// </list><br/>
";

    public const string ClassDocCommentsEnd = /* language=c# */
        @"/// </summary>
";

    public static string EscapeStringForDocComments(string input) =>
        input.Replace("&", "&amp;")
            .Replace("<", "&lt;")
            .Replace(">", "&gt;")
            .Replace("\"", "&quot;")
            .Replace("'", "&apos;");
}